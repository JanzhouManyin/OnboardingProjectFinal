@model OnboardingProjectFinal.Models.Product

@{
    ViewBag.Title = "Index";
}

<!--This is the product view page, Created by John Li, 2018 09 13-->

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />


<div class="container" style="margin-top:3%">
    <h2>Product</h2>
    <!--button on click trigger the Create action and pop up the modal (MyModal)-->
    <a href="#" class="btn btn-info" onclick="AddProductRecord(0)">Create New</a> <br /><br />
    <!--Product table in main page-->
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Action(Edit)</th>
                <th>Action(Delete)</th>
            </tr>
        </thead>
        <tbody id="SetProductList">
            <tr id="LoadingStatus" style="color:red"></tr>
        </tbody>
    </table>
    <!--/.product table-->
    <!--input modal-->
    <div class="modal fade" id="MyModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4 id="ModalTitle"></h4>
                </div>
                <!--modal content-->
                <div class="modal-body">
                    <form id="form">
                        <fieldset id="SubmitForm">
                            @Html.HiddenFor(m => m.Id, new { @id = "ProductId" })
                            <div class="form-group">
                                <label> Product Name:</label> <br />
                                @*@Html.TextBoxFor(m => m.Name, new { @id = "ProductName", @class = "form-control", @placeholder = "Name*" })*@
                                <input name="Name" id="ProductName" class="form-control" data-bind="value: name, valueUpdate: 'afterkeydown'" />
                            </div>

                            <div class="form-group">
                                <label> Product Price($):</label> <br />
                                @*@Html.TextBoxFor(m => m.Price, new { @id = "ProductPrice", @class = "form-control", @placeholder = "Price*" })*@
                                  
                                <input name="Price" id="ProductPrice" class="form-control" data-bind="value: Price, valueUpdate: 'afterkeydown'" />
                            </div>

                            <div class="form-group">
                                <a href="#" class="btn btn-danger" data-bind="click:SubmitClick" id="SaveProductRecord">Save</a>
                                <a href="#" class="btn btn-danger" data-dismiss="modal">close</a>
                            </div>

                        </fieldset>
                    </form>
                </div>
                <!--/.modal content-->
            </div>
        </div>
    </div><!--input modal-->
    <!--delete Confirmation modal-->
    <div class="modal fade" id="DeleteConfirmation">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4>Delete Product Record</h4>
                </div>
                <div class="modal-body">
                    <h4>Are You Sure? You Want To Delete This Record.</h4>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-primary" data-dismiss="modal" id="r">Cancle</a>
                    <a href="#" class="btn btn-danger" onclick="ConfirmDelete()">Confirm</a>
                </div>
            </div>
        </div>
    </div> <!--/.delete Confirmation modal-->
    <!--delete success modal-->
    <div class="modal fade" id="DeleteSuc">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4>Success!</h4>
                </div>
                <div class="modal-body">
                    <h4>Delete Successful!</h4>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-danger" data-dismiss="modal">close</a>
                </div>
            </div>
        </div>
    </div><!--/.delete success modal-->
    <!--product existing prompt modal-->
    <div class="modal fade" id="Warning">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4>Warning!</h4>
                </div>
                <div class="modal-body">
                    <h4>This Product is already existing!</h4>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-danger" data-dismiss="modal">close</a>
                </div>
            </div>
        </div>
    </div> <!--/.product existing prompt modal-->
    <!--validatin fail prompt modal-->
    <div class="modal fade" id="WrongWarning">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4>Warning!</h4>
                </div>
                <div class="modal-body">
                    <h4>Information is not correct!Please input again!</h4>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-danger" data-dismiss="modal">close</a>

                </div>
            </div>
        </div>
    </div><!--/.validatin fail prompt modal-->
</div>

<script src="~/Scripts/knockout-3.4.2.js"></script>
<script src="~/Scripts/knockout.validation.js"></script>
<script>

    $("#LoadingStatus").html("Loading....");

    //using ajax connect with controller and show information of products on the page
    $.get("/Product/GetProductList", null, DataBind);
    function DataBind(ProductList) {
        var SetData = $("#SetProductList");
        for (var i = 0; i < ProductList.length; i++) {
            var Data = "<tr class='row_" + ProductList[i].Id + "'>" +
                "<td>" + ProductList[i].Name + "</td>" +
                "<td>" + ProductList[i].Price + "<span>$</span>" + "</td>" +
                "<td>" + "<a href='#' class='btn btn-warning' onclick='EditProductRecord(" + ProductList[i].Id + ")' ><span class='glyphicon glyphicon-edit'></span></a>" + "</td>" +
                "<td>" + "<a href='#' class='btn btn-danger' onclick='DeleteProductRecord(" + ProductList[i].Id + ")'><span class='glyphicon glyphicon-trash'></span></a>" + "</td>" +
                //"<td>" + "<a href='#' onclick='EditProductRecord(" + ProductList[i].Id + ")' >Edit</a>|<a>Details</a>|<a href='#' onclick='DeleteProductRecord(" + ProductList[i].Id + ")'>Delete</a>" + "</td>" +
                "</tr>";
            SetData.append(Data);
            $("#LoadingStatus").html(" ");
        }
    }


    function AddProductRecord(ProductId) {

        $("#form")[0].reset();
        $("#ProductId").val(0);
        $("#ModalTitle").html("Add New Product");
        $("#MyModal").modal();

        //knockjs validation
        var Products = function () {
            var self = this;
            self.name = ko.observable().extend({
                required: { params: true, message: "please input name." },
                maxLength: 25
            });

            self.Price = ko.observable().extend({
                //       required: { params: true, message: "请输入价格" },
                pattern: {
                    params: /^\d+[\.]?\d{0,2}$/g,
                    message: "The input must be a number and have up to two decimal places！"
                },
                min: { params: 0, message: "the number has to greater than 0" },
                max: 100000.00
 
         
               
            });

            //submit data by ajax
            self.SubmitClick = function () {
                self.errors = ko.validation.group(self);
                //validation successful
                if (Products.isValid().length == 0) {
                    var data = $("#SubmitForm").serialize();
                    $.ajax({
                        type: "Post",
                        url: "/Product/SaveDataInDatabase",
                        data: data,
                        success: function (result) {
                            //determing if the product name already exsts
                            if (result == "no") {
                                $("#Warning").modal();
                            } else {
                                alert("Success!..");
                                window.location.href = "/Product/Index";
                                $("#MyModal").modal("hide");
                            }
                        }
                    })
                } else {
                    //validation fail
                    $("#WrongWarning").modal();
                    self.errors.showAllMessages();
                }
            };
        };
        var Products = new Products();
        ko.applyBindings(Products);
        Products.isValid = ko.validation.group(Products);

    }

    //edit the product
    function EditProductRecord(ProductId) {
        //show the edited product information on the edit modal
        var url = "/Product/GetProductRecordById?ProductId=" + ProductId;
        $("#ModalTitle").html("Update Product Record");
        $("#MyModal").modal();
        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {

                var obj = JSON.parse(data);
                $("#ProductId").val(obj.Id);
                $("#ProductName").val(obj.Name);
                $("#ProductPrice").val(obj.Price);
            }
        })

        //validation
        var Productsupdate = function () {
            var self = this;
            self.name = ko.observable().extend({
                //        required: { params: true, message: "please input name." },
                maxLength: 50
            });

            self.Price = ko.observable().extend({
                //       required: { params: true, message: "请输入价格" },
                min: { params: 1, message: "the number has to greater than 0" },
                pattern: {
                    params: /^\d+[\.]?\d{0,2}$/g,
                    message: "The input must be a number and have up to two decimal places！"
                },
                max: 100000
            });

            //submit data by ajax
            self.SubmitClick = function () {
                self.errors = ko.validation.group(self);

                //validation successful
                if (Productsupdate.isValid().length == 0) {
                    var data = $("#SubmitForm").serialize();
                    $.ajax({
                        type: "Post",
                        url: "/Product/SaveDataInDatabase",
                        data: data,
                        success: function (result) {
                            //determing if the product name already exsits
                            if (result == "no") {

                                $("#Warning").modal();
                            } else {
                                alert("Success!..");
                                window.location.href = "/Product/Index";
                                $("#MyModal").modal("hide");
                            }
                        }
                    })
                } else {
                    $("#WrongWarning").modal();
                }
            };
        };
        var Productsupdate = new Productsupdate();
        ko.applyBindings(Productsupdate);
        Productsupdate.isValid = ko.validation.group(Productsupdate);

    }

    //$("#SaveProductRecord").click(function () {

    //    var data = $("#SubmitFormup").serialize();
    //         $.ajax({
    //            type: "Post",
    //            url: "/Product/SaveDataInDatabase",
    //            data: data,
    //            success: function (result) {
    //                    alert("Success!..");
    //                    window.location.href = "/Product/Index";
    //                    $("#MyModalup").modal("hide");
    //            }
    //        })
    //})

    //delete product
    var DeleteProductRecord = function (ProductId) {
        $("#ProductId").val(ProductId);
        $("#DeleteConfirmation").modal("show");
    }

    var ConfirmDelete = function () {
        var ProductId = $("#ProductId").val();
        $.ajax({
            type: "POST",
            url: "/Product/DeleteProductRecord?ProductId=" + ProductId,
            success: function (result) {
                //determing if the product is already used in the productsold page, forign key
                if (result == "use") {
                    alert("This product has been already used, please check the sale page!");
                    window.location.href = "/Product/Index";
                } else {
                    $('#DeleteSuc').modal();
                    $("#DeleteConfirmation").modal("hide");
                    $(".row_" + ProductId).remove();
                }
            }
        })
    }
</script>
